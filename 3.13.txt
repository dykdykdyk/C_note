对于函数 array数组作为参数的时候，第一维可以不定义，但是第二维必须指定
int max_value(int array[][4])

变量
  在主函数中定义的变量也只在本函数中有效。
  在C语言程序设计中，一般讲全局变量的第一个字母大写。
  一般建议不适用全局变量
      1.全局变量在程序执行过程中都占用存储单元。
 当在全局变量和函数中定义了同命名的变量时，在函数内，局部变量会自动屏蔽全局变量。
静态存储方式是指在程序运行期间由系统分配固定的存储空间的方式，而动态存储方式则是在
程序运行期间根据需要进行动态的分配存储空间的方式。
  局部变量的存储类型
    1.自动变量(auto变量)
      函数的形参和在函数中定义的局部变量
    2.静态局部变量
      函数内用static声明的变量
      每次调用完成之后，它并不释放，静态局部变量是在编译时赋初值的，以后每次挑用函数时
不再重新赋初值而是只保留上次函数调用时结束的值
    3.寄存器变量(register变量)  一般函数内定义
      一般变量的值都是存放在内存中，需要存数的时候，由运算器送到内存存放，而如果有些变量使用
很频繁，，允许将局部变量的值存放在CPU中的寄存器中，需要用的时候直接从寄存器取出，这样可以提高运行效率
    register int f;
  全局变量的存储类型(全部都是存放在静态存储区的)
     1.在一个文件内扩展外部变量的作用域
         main{
	   extern int A,B,C;//把外部变量A,B,C的作用域扩展到从此处开始 还可以extern A,B,C;
	}
  	int A,B,C;	
      2.将外部变量的作用域扩展到其他文件(见Files demo)
	
      3.将外部变量的作用域限制在本文件中
        在定义外部变量前加static就可以了。这时就只能在本文件使用此变量	
 	注意：对局部变量用static声明，把他分配在静态储存区，在程序执行期间不释放。
	      对全局变量同static声明，则该变量的作用域只限于本文件模块
   声明和定义
       把建立存储空间的声明称定义，把不需要建立存储空间的声明称为声明       
   函数
     内部函数：只能被本文件中的其他函数所调用，称为内部函数。
     static int fun(int a)
     外部函数：在函数首部的最左端加关键字 extern,则侧函数是外部函数。
     extern int fun(int c)

指针
    指针的概念
        在程序定义一个变量，在编译时，系统会给这个变量分配内存单元，内存区中的
每一个字节有一个编号，这就是"地址"，这个地址指向该变量单元，因此，将地址形象
化地称为指针。
    直接访问 k=i+j;
    间接访问 int i_pointer =&i; //将i的地址存放到i_pointer中，i_pointer的值就是
变量i所占用单元的起始地址
    一个变量的地址称为该变量的"指针".地址2000是变量i的指针。
   如果有一个变量专门用来存放另一个变量的地址(即指针)，称它为"指针变量"。
指针变量就是地址变量。指针是一个地址，而指针变量是存放地址的变量。
   指针变量
    int a=100; 
    int *pointer_1; //定义指向整形数据的指针变量pointer_1
    pointer_1 =&a; //把变量a的地址赋给指针变量pointer_1  
    printf("*pointer_1=%d/n",*pointer_1); //输出的是a的值
    printf("pointer_1 =%d/n",pointer_1); //输出的是地址
     int *pointer_1;里面 *表示的是定义一个指针变量
     *pointer_1表示的是指针变量pointer_1所 指向 的变量，也就是变量a









    
     
      