转义字符： \n 换行符
 \t 将输出的位置调到下一个tab位置
计算机里面的整数都是以补码存储的
unisigned short b; //b为无符号短整形变量
unisigned short b =-1;//不能把一个负整数存储在无符号短整形变量中，系统会
先将-1转换成补码形式，就是全部二进制都是1，然后把他存入变量price中
字符变量 char c='>'; 
%d 格式输出十进制整数63，%c 用字符形式输出字符‘？’
 将一个大写字母转换成一个小写字母 
    char c2 =cl +32 (转换成小写)
    printf("%c\n",c2);
强制类型转换
 (double)a (将a转换成double类型)
  (int)x +y 只转换x

位运算符  <<>> ~ | &
指针运算符   * 和&

a=12;
a+=a-=a*a;   结果为-264     a+=-132;
字符型数据赋给整型变量时，将字符的ASCII代码赋给整形变量
 i='A'; A的ASCII为65，i =65;
scanf("%If%If%If",&e,&f,&g); 双精度的变量的值 %If &e表示e在内存中的地址

预编译指令 #include<stdio.h> 把有关头文件放在本程序中
如果是自己编写的头文件：#include "C:\temp\file1.h"

printf("a=%d b=%d\n",a,b)   %d是属于格式申明，在输出的时候，会替换输出列表
(a,b)的值
printf("a=%5d b=%d\n",a,b)  %5d指定输出数据占5列
   若输出long(长整型)数据，%ld
char ch ='a';
printf("%c",a); 表示输出一个字符  （，当越界大于127的时候 只考虑一个字节的长度）
printf("%s",a);  输出一个字符串

printf("%f",a);   默认小数部分输出6位
printf("%m.nf",a); 指定输出数据宽度（m）和小数位数（n）
   例：printf("%20.15f",1.0/3); 输出结果为 0.333333333333333 （前面还有3个空格）

printf("-%m.nf",a);作用与他printf("%m.nf",a);基本相同，当数据长度小于m的时候，数据
向左边靠齐. 
printf("%o",p);以八进制数形式输出p

printf("%e",123.456) ;   默认输出小数部分6位 指数部分5列  1.234560 e+002
printf("%13.2e",123.456) ;   1.23e+002 (前面有4个空格)         6     5
    //如果想输出%的话 printf("%f%%",123.456) ; 格式申明后面加两个百分号就可以了

scanf("%f",a) ; 后面的变量必须写变量地址，而不是变量名

putchar函数 输出一个字符   char a ='B',putchar(a);向显示器输出字符B

char a,b,c; a=getchar(); 只取第一个字符


if 语句   如果没有else 
   例子：
      int x= -1;
       if(x<0) 
           y=-1; 
            x=-3;//这句依然会执行，他只看一个分号

逻辑运算符 优先级 ! == > &&  == >||
  && 两个的时候，如果左边的为假，右边的就不会执行.




