结构体
 1.C语言允许用户自己建立由不同类型数据组成的组合型的数据结构，它成为结构体。
     struct 结构体名
     注意：不能企图输出结构体变量名来达到输出结构体变量所有成员的值。
     如引用的是另一个结构体中的成员，则可以用student.birthdary.month来引用
2.结构体数组
     先声明一个结构体类型(如struct Person),然后再用此类型定义结构体数组：
      结构体类型 数组名[数组长度]  :struct Person leader[3];
     对结构体数组初始化的形式实在定义数组的后面加上：={处置列表}：
     如：struct Person leader[3]={"Li",0,"Zhang",0,"Sun",0};
    
3.结构体指针
    1.只向结构体变量的指针
       struct Student *p; //定义指向 struct Student类型数据的指针变量 p
           (*p).num // 输出结构体变量中的成员num
	   (*p).num 等价于p->num   /stu.num
     2.指向结构体数组的指针
            
      3.链表
	 链表是一种常见的重要的数据结构，他是动态地进行存储分配的
一种结构。结构体最适合使用链表来表示，链表中存储中的数据是根据
需要才去开辟内存单元。
        静态链表
	   结点都是在程序中定义的，不是临时开辟的，也不能用完后释放
	 动态链表
      #define LEN sizeof(struct Student)//求字节数运算符
        输出链表函数
           p=p->next;
    
 4. 共用体(有时也称为联合体)
        使几个不同的变量共享同一段内存的结构，称为"共用体"类型的结构。
          union 共用体名
		{
		   成员表列：
		   变量表列：	
		}
	  union Data //Data共用体名称
	    {int i;
	      char ch;
	      float f;
	    }a,b,c;//在声明类型同时定义变量
        共用体所占的内存长度等于最长的成员的长苏
	结构体变量所占内存长度是个成员占的内存长度之和。
      2.引用共用体变量的方式
          a.i  只能引用共用体变量中的成员
      3.共用体类型数据的特点
           1.对成员进行初始化的时候，只能一个一个的初始化 union Data a ={16};
           2.共用体变量的地址和他的各成员的地址都是同一个地址。
	   3.允许通用提变量互相赋值。
	   4.

5.使用枚举类型
    1.枚举(enumeration)
       定义  enum Weekday{sun,mon,tue,wed,thu,fri,sat};
             enum Weekday workday,weekend//两枚举变量的值只能在{sun,mon,tue,wed,thu,fri,sat}里面取
        {sun,mon,tue,wed,thu,fri,sat}枚举元素时属于常量，不能对他们进行赋值

6.用typedef声明新类型名
     1.简单地用一个新的类型名代替原有的类型名
         typedef int Integer; //指定用Integer为类型名，作用与int相同
	 int i ,j    /    Integer i,j    //这两行等价
     2.命令一个简单地类型名代替复杂的类型表示方法
         指针，结构体的变量定义
	 2.命名一个新的类型名代表数组类型
	   typedef int Num[100]; // 生米帮Num为整型数组类型名
	   Num a;//定义a为整型数组名，它有100个元素
	 3.命名一个新的类型名代表指针类型
	    typedef char*String  //声明String为字符指针类型
     定义：按定义变量的方式，把变量名换上新类型名，并且在最前面加"typedef",就声明了新类型名代表原来的类型。

10 文件
	   1.程序文件 .c  .obj .exe
   	2.数据文件， 工程需运行时读写的数据
   	3.实际上，常常需要将一些数据输出到磁盘上保存起来，以后需要时再从磁盘中输入到计算机内存。、
这就是磁盘文件。文件一般 指存储在外部介质上数据的集合。
    2.文件名 ：文件路径，文件名主干，文件后缀 
    3.文件的分类  数据文件分为ASCII文件和二进制文件，数据在内存中是以二进制形式存储的，如果不加转换
地输出到外存，就是二进制文件，它就是存储在内存的数据的映像，也称为映像文件。
     ASCII文件又称为文本文件，每一个字节放一个字符的ASCII代码。
    4.文件缓冲区:系统自动地在内存区为程序中每一个正在使用的文件开辟一个文件缓冲区。
    5.文件类型指针 FILE *fp 定义一个指向文件型数据的指针变量，指向某一个文件的文件信息区(是一个
结构体变量)通过文件指针变量能够找到与之关联的文件，通常将这种指向文件信息区的指针变量简称我指向
文件的指针变量。
 
  2.打开和关闭文件
    1.fopen(文件名，使用方式)； FILE *fp; fp=fopen("a1","r");//将fopen函数的返回值赋给指针变量fp
    2.fclose(文件指针)
  3.顺序读写数据文件
    1.怎样向文件读入或输出一个字符的函数
       getchar()//接收用户从键盘输入的字符，每次只能够取一个字符。
       fgetc(fp)从fp指向的文件读入一个字符
       fputc(ch,fp)把字符ch写到文件指针变量fp所指向的文件中
       feof函数可以检查到文件读写位置标记是否已到文件的末尾
       
       fgets(str,n,fp)//从fp所指文件中读入一个长度为n-1个字符串,然后把这n个字符放到字符数组str中。
       fputs(str,fp)//把str所指向的字符串写到文件指针变量fp所指向的文件中

       fprintf(文件指针，格式化字符串，输出列表)；
       fscanff(文件指针，格式化字符串，输入列表)；	   